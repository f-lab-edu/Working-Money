<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.workingmoney.repository.user.UserRepository">

  <insert id="save" parameterType="org.example.workingmoney.repository.user.UserEntity"
    useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into user (password_hash, nickname, email, created_at, updated_at)
    values (#{passwordHash}, #{nickname}, #{email}, #{createdAt}, #{updatedAt})
  </insert>

  <select id="findById" resultType="org.example.workingmoney.repository.user.UserEntity">
    select id, password_hash, nickname, email, created_at, updated_at
    from user
    where id = #{id}
  </select>

  <select id="findByEmail" resultType="org.example.workingmoney.repository.user.UserEntity">
    select id, password_hash, nickname, email, created_at, updated_at
    from user
    where email = #{email}
  </select>

  <select id="findByNickname" resultType="org.example.workingmoney.repository.user.UserEntity">
    select id, password_hash, nickname, email, created_at, updated_at
    from user
    where nickname = #{nickname}
  </select>

  <select id="existsByEmail" resultType="boolean">
    select exists (
      select 1
      from user
      where email = #{email}
    )
  </select>

  <select id="existsByNickname" resultType="boolean">
    select exists (
      select 1
      from user
      where nickname = #{nickname}
    )
  </select>

  <update id="updateNickname">
    update user
    set nickname = #{nickname},
        updated_at = now()
    where id = #{id}
  </update>

  <delete id="deleteById">
    delete from user
    where id = #{id}
  </delete>

</mapper>
